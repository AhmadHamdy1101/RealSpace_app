// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';


class Saveproperty implements SupadartClass<Saveproperty> {
  final DateTime createdAt;
  final String? userid;
  final String id;
  final String? propertyid;

  const Saveproperty({
    required this.createdAt,
    this.userid,
    required this.id,
    this.propertyid,
  });

  static String get table_name => 'saveproperty';
  static String get c_createdAt => 'created_at';
  static String get c_userid => 'userid';
  static String get c_id => 'id';
  static String get c_propertyid => 'propertyid';

  static List<Saveproperty> converter(List<Map<String, dynamic>> data) {
    return data.map(Saveproperty.fromJson).toList();
  }
  static Saveproperty converterSingle(Map<String, dynamic> data) {
    return Saveproperty.fromJson(data);
  }
  static Map<String, dynamic> _generateMap({
    DateTime? createdAt,
    String? userid,
    String? id,
    String? propertyid,
  }) {
    return {
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (userid != null) 'userid': userid,
      if (id != null) 'id': id,
      if (propertyid != null) 'propertyid': propertyid,
    };
  }
  static Map<String, dynamic> insert({
    DateTime? createdAt,
    String? userid,
    String? id,
    String? propertyid,
  }) {
    return _generateMap(
      createdAt: createdAt,
      userid: userid,
      id: id,
      propertyid: propertyid,
    );
  }
  static Map<String, dynamic> update({
    DateTime? createdAt,
    String? userid,
    String? id,
    String? propertyid,
  }) {
    return _generateMap(
      createdAt: createdAt,
      userid: userid,
      id: id,
      propertyid: propertyid,
    );
  }
  factory Saveproperty.fromJson(Map<String, dynamic> jsonn) {
    return Saveproperty(
      createdAt: jsonn['created_at'] != null ? DateTime.parse(jsonn['created_at'].toString()) : DateTime.fromMillisecondsSinceEpoch(0),
      userid: jsonn['userid'] != null ? jsonn['userid'].toString() : '',
      id: jsonn['id'] != null ? jsonn['id'].toString() : '',
      propertyid: jsonn['propertyid'] != null ? jsonn['propertyid'].toString() : '',
    );
  }

  static Object New({
    DateTime? createdAt,
    String? userid,
    String? id,
    String? propertyid,
  }) {
    return {
      if (createdAt != null) 'created_at': createdAt,
      if (userid != null) 'userid': userid,
      if (id != null) 'id': id,
      if (propertyid != null) 'propertyid': propertyid,
    };
  }
  Map<String, dynamic> toJson() {
    return _generateMap(
      createdAt: createdAt,
      userid: userid,
      id: id,
      propertyid: propertyid,
    );
  }
  Saveproperty copyWith({
    DateTime? createdAt,
    String? userid,
    String? id,
    String? propertyid,
  }) {
    return Saveproperty(
      createdAt: createdAt ?? this.createdAt,
      userid: userid ?? this.userid,
      id: id ?? this.id,
      propertyid: propertyid ?? this.propertyid,
    );
  }

}

